name: Issue comment handler
on: [issue_comment, workflow_dispatch]

jobs:
  check_comment:
    runs-on: ubuntu-latest
    steps:
    - name: checkout_repo
      uses: actions/checkout@v3
      with:
        path: main
    - name: check_the_comment
      run: |
          if [[ $COMMENT =~ "/backport" ]]; then 
            echo YES BACKPORT!
          else
            echo NO BACKPORT!
          fi
          
          # echo FILE: 
          # cat ${GITHUB_WORKSPACE}/main//MAINTAINED_GO_VERSIONS
          echo "::set-output name=matrix::$(cat MAINTAINED_GO_VERSIONS | jq -R -s -c 'split("\n") | map(select(length > 0))')"
          echo TROLL '${{ toJSON(env) }}'
          echo event '${{ toJSON(github.event) }}'
          # echo inputs '${{ toJSON(inputs) }}'
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
  open_issues:
    runs-on: ubuntu-latest
    needs: check_comment
    strategy:
      fail-fast: false
      matrix: 
        go_version: ${{ fromJson(needs.check_comment.outputs.matrix) }}
    steps:
    - name: Create issue
      run: echo GO_VERSION!!! ${{ matrix.go_version }}
env:
  COMMENT: ${{ github.event.comment.body }}
  
  
#   - name: get-current-golang-ver
#       run: |
#         CURRENT_GOLANG_VER=$( curl -s https://go.dev/VERSION?m=text | sed -r 's/^.{2}//' )
#         echo $CURRENT_GOLANG_VER
  
  
  
  # if the comment contains the word "/backport"
  # checkout the repo
  # get a list of supported files in the SUPPORTED RELEASE BRANCH file
  # get the current go version and go back two versions
  # take those out of the list of supported_release_branches
  # for each one in the supported release branches, 
  #    open an issue and label it
